'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _most = require('most');

var _MulticastSource = require('most/lib/source/MulticastSource');

var _MulticastSource2 = _interopRequireDefault(_MulticastSource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Subscription() {
  var _this = this;

  this.run = function (sink, scheduler) {
    return _this._run(sink, scheduler);
  };
  this.add = function (x) {
    return _this._add(x);
  };
  this.error = function (err) {
    return _this._error(err);
  };
  this.end = function (x) {
    return _this._end(x);
  };
}

Subscription.prototype._run = function run(sink, scheduler) {
  this.sink = sink;
  this.scheduler = scheduler;
  this.active = true;
  return this;
};

Subscription.prototype.dispose = function dispose() {
  this.active = false;
};

function tryEvent(sink, scheduler, event) {
  try {
    sink.event(scheduler.now(), event);
  } catch (e) {
    sink.error(scheduler.now(), e);
  }
}

Subscription.prototype._add = function add(x) {
  if (!this.active) {
    return;
  }
  tryEvent(this.sink, this.scheduler, x);
};

Subscription.prototype._error = function error(e) {
  this.active = false;
  this.sink.error(this.scheduler.now(), e);
};

function tryEnd(sink, scheduler, event) {
  try {
    sink.end(scheduler.now(), event);
  } catch (e) {
    sink.error(scheduler.now(), e);
  }
}

Subscription.prototype._end = function end(x) {
  if (!this.active) {
    return;
  }
  this.active = false;
  tryEnd(this.sink, this.scheduler, x);
};

function create() {
  var sink = new Subscription();
  var stream = new _most.Stream(new _MulticastSource2.default(sink));
  return { sink: sink, stream: stream };
}

exports.default = create;