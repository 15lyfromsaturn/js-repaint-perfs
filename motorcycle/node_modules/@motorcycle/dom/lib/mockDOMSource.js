'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockDOMSource = undefined;

var _most = require('most');

var _most2 = _interopRequireDefault(_most);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var emptyStream = _most2.default.empty();

function getEventsStreamForSelector(mockedEventTypes) {
  return function getEventsStream(eventType) {
    for (var key in mockedEventTypes) {
      if (mockedEventTypes.hasOwnProperty(key) && key === eventType) {
        return mockedEventTypes[key];
      }
    }
    return emptyStream;
  };
}

function makeMockSelector(mockedSelectors) {
  return function select(selector) {
    for (var key in mockedSelectors) {
      if (mockedSelectors.hasOwnProperty(key) && key === selector) {
        var observable = emptyStream;
        if (mockedSelectors[key].hasOwnProperty('observable')) {
          observable = mockedSelectors[key].observable;
        }
        return {
          observable: observable,
          select: makeMockSelector(mockedSelectors[key]),
          events: getEventsStreamForSelector(mockedSelectors[key])
        };
      }
    }
    return {
      observable: emptyStream,
      select: makeMockSelector(mockedSelectors),
      events: function events() {
        return emptyStream;
      }
    };
  };
}

function mockDOMSource() {
  var mockedSelectors = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  return {
    observable: emptyStream,
    select: makeMockSelector(mockedSelectors),
    events: function events() {
      return emptyStream;
    }
  };
}

exports.mockDOMSource = mockDOMSource;