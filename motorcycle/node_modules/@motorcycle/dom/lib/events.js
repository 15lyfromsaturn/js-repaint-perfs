'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _most = require('most');

var _fromEvent = require('./fromEvent');

var _fromEvent2 = _interopRequireDefault(_fromEvent);

var _select = require('./select');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var matchesSelector = undefined;
try {
  matchesSelector = require('matches-selector');
} catch (err) {
  matchesSelector = function () {};
}

function makeEventsSelector(rootElement$, selector) {
  return function eventsSelector(type) {
    var useCapture = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

    if (typeof type !== 'string') {
      throw new Error('DOM drivers events() expects argument to be a ' + 'string representing the event type to listen for.');
    }
    return rootElement$.map(function (rootElement) {
      return { rootElement: rootElement, selector: selector };
    }).skipRepeatsWith(function (prev, curr) {
      return prev.selector.join('') === curr.selector.join('');
    }).map(function (_ref) {
      var rootElement = _ref.rootElement;

      if (!rootElement) {
        return (0, _most.empty)();
      }

      if (matchesSelector(rootElement, selector.join(' '))) {
        return (0, _fromEvent2.default)(type, rootElement, useCapture);
      }

      return (0, _fromEvent2.default)(type, rootElement, useCapture).filter(function (ev) {
        if (matchesSelector(ev.target, selector.join(' ')) || matchesSelector(ev.target, selector.join(''))) {
          return (0, _select.makeIsStrictlyInRootScope)(selector)(ev.target);
        }
        return false;
      });
    }).switch().multicast();
  };
}

exports.default = makeEventsSelector;