'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _hold = require('@most/hold');

var _hold2 = _interopRequireDefault(_hold);

var _snabbdom = require('snabbdom');

var _snabbdom2 = _interopRequireDefault(_snabbdom);

var _h = require('snabbdom/h');

var _h2 = _interopRequireDefault(_h);

var _classNameFromVNode = require('snabbdom-selector/lib/classNameFromVNode');

var _classNameFromVNode2 = _interopRequireDefault(_classNameFromVNode);

var _selectorParser2 = require('snabbdom-selector/lib/selectorParser');

var _selectorParser3 = _interopRequireDefault(_selectorParser2);

var _utils = require('./utils');

var _vTreeParser = require('./vTreeParser');

var _vTreeParser2 = _interopRequireDefault(_vTreeParser);

var _isolate = require('./isolate');

var _select = require('./select');

var _select2 = _interopRequireDefault(_select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function makeVNodeWrapper(rootElement) {
  return function vNodeWrapper(vNode) {
    var _selectorParser = (0, _selectorParser3.default)(vNode.sel);

    var selectorTagName = _selectorParser.tagName;
    var selectorId = _selectorParser.id;

    var vNodeClassName = (0, _classNameFromVNode2.default)(vNode);
    var _vNode$data = vNode.data;
    var vNodeData = _vNode$data === undefined ? {} : _vNode$data;
    var _vNodeData$props = vNodeData.props;
    var vNodeDataProps = _vNodeData$props === undefined ? {} : _vNodeData$props;
    var _vNodeDataProps$id = vNodeDataProps.id;
    var vNodeId = _vNodeDataProps$id === undefined ? selectorId : _vNodeDataProps$id;

    var isVNodeAndRootElementIdentical = vNodeId === rootElement.id && selectorTagName === rootElement.tagName && vNodeClassName === rootElement.className;

    if (isVNodeAndRootElementIdentical) {
      return vNode;
    }

    var tagName = rootElement.tagName;
    var id = rootElement.id;
    var className = rootElement.className;

    var elementId = id ? '#' + id : '';
    var elementClassName = className ? '.' + className.split(' ').join('.') : '';
    return (0, _h2.default)('' + tagName + elementId + elementClassName, {}, [vNode]);
  };
}

var domDriverInputGuard = function domDriverInputGuard(view$) {
  if (!view$ || typeof view$.observe !== 'function') {
    throw new Error('The DOM driver function expects as input an ' + 'Observable of virtual DOM elements');
  }
};

// snabbdoms style module blows up server-side
// because rAf is not defined
if (typeof window === 'undefined') {
  global.requestAnimationFrame = setTimeout;
}

var defaultOptions = {
  modules: [require('snabbdom/modules/class'), require('snabbdom/modules/props'), require('snabbdom/modules/attributes'), require('snabbdom/modules/style')]
};

var makeDOMDriver = function makeDOMDriver(containerElementSelectors) {
  var _ref = arguments.length <= 1 || arguments[1] === undefined ? defaultOptions : arguments[1];

  var _ref$modules = _ref.modules;
  var modules = _ref$modules === undefined ? defaultOptions.modules : _ref$modules;

  var patch = _snabbdom2.default.init(modules);
  var rootElement = (0, _utils.domSelectorParser)(containerElementSelectors);

  var DomDriver = function DomDriver(view$) {
    domDriverInputGuard(view$);
    if (!Array.isArray(modules)) {
      throw new Error('Optional modules option must be ' + 'an array for snabbdom modules');
    }

    var rootElement$ = (0, _hold2.default)(view$.map(_vTreeParser2.default).switch().map(makeVNodeWrapper(rootElement)).scan(patch, rootElement).skip(1).map(function (_ref2) {
      var elm = _ref2.elm;
      return elm;
    }));

    rootElement$.drain();

    return {
      namespace: [],
      select: (0, _select2.default)(rootElement$),
      isolateSink: _isolate.isolateSink,
      isolateSource: _isolate.isolateSource
    };
  };

  return DomDriver;
};

exports.default = makeDOMDriver;