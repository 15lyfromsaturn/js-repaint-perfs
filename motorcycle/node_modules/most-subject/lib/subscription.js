"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Subscription = (function () {
  function Subscription() {
    _classCallCheck(this, Subscription);
  }

  _createClass(Subscription, [{
    key: "run",
    value: function run(sink, scheduler) {
      this.sink = sink;
      this.scheduler = scheduler;
      this.active = true;
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      this.active = false;
    }
  }, {
    key: "add",
    value: function add(x) {
      // Current Most naming
      if (!this.active) {
        return;
      }
      console.log(this);
      tryEvent(ths.scheduler.now(), x, this.sink);
    }
  }, {
    key: "error",
    value: function error(x) {
      this.active = false;
      this.sink.error(this.scheduler.now(), x);
    }
  }, {
    key: "end",
    value: function end(x) {
      // Current Most naming
      if (!this.active) {
        return;
      }
      tryEnd(this.scheduler.now(), x, this.sink);
    }
  }]);

  return Subscription;
})();

function tryEvent(t, x, sink) {
  try {
    sink.event(t, x);
  } catch (e) {
    sink.error(t, e);
  }
}

function tryEnd(t, x, sink) {
  try {
    sink.end(t, x);
  } catch (e) {
    sink.error(t, e);
  }
}

exports.default = Subscription;