'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transposeVTree = undefined;

var _rx = require('rx');

var _rx2 = _interopRequireDefault(_rx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createVTree(vTree, children) {
  return {
    sel: vTree.sel,
    data: vTree.data,
    text: vTree.text,
    elm: vTree.elm,
    key: vTree.key,
    children: children
  };
}

function transposeVTree(vTree) {
  if (!vTree) {
    return null;
  } else if (vTree && typeof vTree.data === 'object' && vTree.data.static) {
    return _rx2.default.Observable.just(vTree);
  } else if (typeof vTree.subscribe === 'function') {
    return vTree.flatMapLatest(transposeVTree);
  } else if (typeof vTree === 'object') {
    if (!vTree.children || vTree.children.length === 0) {
      return _rx2.default.Observable.just(vTree);
    }

    var vTreeChildren = vTree.children.map(transposeVTree).filter(function (x) {
      return x !== null;
    });

    return vTreeChildren.length === 0 ? _rx2.default.Observable.just(createVTree(vTree, vTreeChildren)) : _rx2.default.Observable.combineLatest(vTreeChildren, function () {
      for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
        children[_key] = arguments[_key];
      }

      return createVTree(vTree, children);
    });
  } else {
    throw new Error('Unhandled vTree Value');
  }
}

exports.transposeVTree = transposeVTree;